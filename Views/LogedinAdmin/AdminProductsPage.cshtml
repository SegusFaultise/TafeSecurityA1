@{
    ViewData["Title"] = "AdminProductsPage";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<head>
    <link rel="stylesheet" type="text/css" href="/css/products.css" />
</head>

<script>
    var session_id = sessionStorage.getItem("data");

    if (session_id == null) {
        sessionStorage.removeItem("data");
        sessionStorage.removeItem("emailInput");
        sessionStorage.removeItem("passwordInput");
        sessionStorage.removeItem("emailBox");
        window.location.href = '@Url.Action("LoginPage", "Home")';
    }
</script>

<body>
    <section>
        <div class="first-div">
            <div class="get-div">
                <h2>products</h2>
                <table>
                    <tr id="table-info">
                        <th>Id</th>
                        <th>Name</th>
                        <th>Price</th>
                        <th>Description</th>
                        <th>Updated date</th>
                    </tr>

                    <tbody id="product-table">

                    </tbody>
                </table>

                <button id="add-product-button">Add</button>
                <button id="update-product-button">Update</button>
                <button id="delete-product-button">Delete</button>

                <input placeholder="product.." id="product-input"/>
                <input placeholder="price.." id="price-input"/>
                <input placeholder="description.." id="description-input" />
                <input placeholder="Pick a product id.." id="product-id-input"/>
            </div>
        </div>

        <div class="first-div">
            <div class="get-div">
                <h2>All Comments</h2>
                <table>
                    <tr id="table-info">
                        <th>Id</th>
                        <th>User</th>
                        <th>Product</th>
                        <th>Commnet</th>
                    </tr>

                    <tbody id="all-comments-table">

                    </tbody>

                </table>

                <button id="delete-comment-button">Delete</button>

                <input placeholder="Pick comment id.." id="comment-id-input" />
            </div>
        </div>

        <div class="first-div">
            <div class="get-div">
                <h2 id="user-heading">all users</h2>
                <table>
                    <tr id="table-info">
                        <th>Id</th>
                        <th>Email</th>
                    </tr>

                    <tbody id="users-table">

                    </tbody>

                </table>
                <button id="delete-user-button">Delete</button>

                <input placeholder="pick user id.." id="user-id-input">
            </div>
        </div>
    </section>
    <script>

        var productArray = []
        var userArray = []
        var commentArray = []
        var productIdInput = $("#product-id-input")
        var commentIdInput = $("#comment-id-input")
        var userIdInput = $("#user-id-input")
        var descriptionInput = $("#description-input")
        var priceInput = $("#price-input")
        var productNameInput = $("#product-input")


        ////////////////////////// Start of Table builder methods ////////////////////////////
        /*Builds a table that displays all products,
        and if a new product is created the table
        will generate a new row*/

        function buildProductTabel(data) {
            var table = document.getElementById('product-table')

            for (var i = 0; i < data.length; i++) {

                var row = `<tr>
                                <td class="w">${data[i].product_id}</td>
                                <td>${data[i].product_name}</td>
                                <td>${data[i].product_price}$</td>
                                <td>${data[i].product_description}</td>
                                <td>${data[i].updated_date}</td>
                            </tr>`
                table.innerHTML += row

                    var cells = table.getElementsByClassName('w')

                    for (var i = 0, len = cells.length; i < len; i++) {
                        cells[i].onclick = function () {
                            $("#product-id-input").val(this.innerHTML)
                        };
                    }
            }
        }

        /*Builds a table that displays all comments,
        and if a new product is created the table
        will generate a new row*/

        function buildAllCommentsTabel(data) {
            var table = document.getElementById('all-comments-table')

            for (var i = 0; i < data.length; i++) {

                var row = `<tr>
                                <td class="w">${data[i].comment_id}</td>
                                <td>${data[i].email}</td>
                                <td>${data[i].product}</td>
                                <td>${data[i].comment_text}</td>
                           </tr>`
                table.innerHTML += row

                var cells = table.getElementsByClassName('w')

                for (var i = 0, len = cells.length; i < len; i++) {
                    cells[i].onclick = function () {
                        $("#comment-id-input").val(this.innerHTML)
                    };
                }
            }
        }

        /*Builds a table that displays all users,
        and if a new product is created the table
        will generate a new row*/

        function buildUsersTabel(data) {
            var table = document.getElementById('users-table')

            for (var i = 0; i < data.length; i++) {

                var row = `<tr>
                                <td class="w">${data[i].user_id}</td>
                                <td>${data[i].email}</td>
                           </tr>`
                table.innerHTML += row

                var cells = table.getElementsByClassName('w')

                for (var i = 0, len = cells.length; i < len; i++) {
                    cells[i].onclick = function () {
                        $("#user-id-input").val(this.innerHTML)
                    };
                }
            }
        }
        ////////////////////////// End of Table builder methods ////////////////////////////

        ////////////////////////// Start of AJAX request ////////////////////////////
        /*Gets all prodcuts via an ajax GET request 
        linked to the product controller*/

        $.ajax({
            type: "GET",
            url: "@Url.Action("GetProducts", "Product")",
            dataType: "JSON",
            success: function (response) {
                productArray = response
                buildProductTabel(productArray)
                console.log(productArray)
            }
        })

        /*Gets all users via an ajax GET request
        linked to the product controller*/
        $.ajax({
            type: "GET",
            url: "@Url.Action("GetAllUsers", "User")",
            dataType: "JSON",
            success: function (response) {
                userArray = response
                buildUsersTabel(userArray)
                console.log(userArray)
            }
        })

        /*Gets all comments via an ajax GET request 
        linked to the product controller*/
        $.ajax({
            type: "GET",
            url: "@Url.Action("GetComments", "Comment")",
            dataType: "JSON",
            success: function (response) {
                commentArray = response
                buildAllCommentsTabel(commentArray)
                console.log(commentArray)
            }
        })

        /*
            Deletes product via an ajax DELETE request
            linked to the product controller ->
        */
        $("#delete-product-button").click(function (event) {

            $.ajax({
                type: "DELETE",
                url: "@Url.Action("DeleteProduct", "Product")" + "?" +
                                                               "product_id=" +
                                                               productIdInput.val(),
                dataType: "JSON",
                success: function (response) {
                    console.log(response)
                }
            })

            location.reload()
        })

        /*
            Delets comment via an ajax DELETE request
            linked to the comment controller ->
        */
        $("#delete-comment-button").click(function (event) {

            $.ajax({
                type: "DELETE",
                url: "@Url.Action("DeleteUserComment", "Comment")" + "?" +
                                                               "comment_id=" +
                                                               commentIdInput.val(),
                dataType: "JSON",
                success: function (response) {
                    console.log(response)
                }
            })

            location.reload()
        })

        /*
            Deletes user via an ajax DELETE request
            linked to the user controller ->
        */
        $("#delete-user-button").click(function (event) {

            $.ajax({
                type: "DELETE",
                url: "@Url.Action("DeleteUser", "User")" + "?" +
                                                               "user_id=" +
                                                               userIdInput.val(),
                dataType: "JSON",
                success: function (response) {
                    console.log(response)
                }
            })

            location.reload()
        })

        /*
            Updates product via an ajax PUT request
            linked to the product controller ->
        */
        $("#update-product-button").click(function (event) {

                $.ajax({
                    type: "PUT",
                    url: "@Url.Action("PutProduct", "Product")" + "?" +
                                                                   "product_id="
                                                                   + productIdInput.val() +
                                                                   "&product_name=" +
                                                                   productNameInput.val() +
                                                                   "&product_price=" +
                                                                   priceInput.val() +
                                                                   "&product_description=" +
                                                                   descriptionInput.val(),
                    dataType: "JSON",
                    success: function (response) {
                        console.log(response)
                    }
            })

            location.reload()
        })

        /*
            Creates a product via an ajax DELETE request
            linked to the product controller ->
        */
        $("#add-product-button").click(function (event) {

            $.ajax({
                type: "POST",
                url: "@Url.Action("PostProduct", "Product")" + "?" +
                                                            "product_name=" +
                                                            productNameInput.val() +
                                                            "&product_price=" +
                                                            priceInput.val() +
                                                            "&product_description=" +
                                                            descriptionInput.val(),

                dataType: "JSON",
                success: function (response) {
                    console.log(response)
                }
            })

            location.reload()
        })
        ////////////////////////// End of AJAX request ////////////////////////////
    </script>
</body>